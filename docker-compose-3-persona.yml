#docker-compose -f docker-compose-3-persona.yml up --build -d

##################################################################################
## Docker-Compose for a 3-persona testnet ########################################
##
## Heidi the Hydrogen Producer
## Address:           5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
## HyProof API:       localhost:8000/swagger
## Identity Service:  localhost:9000/v1/swagger
##
## Emma the Energy Owner
## Address:           5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
## HyProof API:       localhost:8010/swagger
## Identity Service:  localhost:9010/v1/swagger
##
## Reginald the Regulator
## Address:           5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y
## HyProof API:       localhost:8020/swagger
## Identity Service:  localhost:9020/v1/swagger
##
##################################################################################

version: '3'

networks:
  chain:
    ipam:
      driver: default
  ipfs:
    ipam:
      driver: default
  hydrogen-producer:
    ipam:
      driver: default
  energy-owner:
    ipam:
      driver: default
  regulator:
    ipam:
      driver: default

services:
  ##################################################################################
  ## Heidi the Hydrogen Producer ###################################################
  ##################################################################################

  hydrogen-producer-postgres-hyproof-api:
    image: postgres:16.1-alpine
    container_name: hydrogen-producer-postgres-hyproof-api
    depends_on:
      hydrogen-producer-node:
        condition: service_healthy
    volumes:
      - hydrogen-producer-hyproof-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-hyproof-api
    networks: ['hydrogen-producer']

  hydrogen-producer-postgres-identity:
    image: postgres:16.1-alpine
    container_name: hydrogen-producer-postgres-identity
    depends_on:
      hydrogen-producer-node:
        condition: service_healthy
    volumes:
      - hydrogen-producer-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-identity
    networks: ['hydrogen-producer']

  hydrogen-producer-identity:
    image: digicatapult/dscp-identity-service:latest
    container_name: hydrogen-producer-identity
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest &&
      node app/index.js"
    ports:
      - 9000:9000
    depends_on:
      hydrogen-producer-node:
        condition: service_healthy
      hydrogen-producer-postgres-identity:
        condition: service_started
    environment:
      - PORT=9000
      - API_HOST=hydrogen-producer-node
      - API_PORT=9944
      - DB_HOST=hydrogen-producer-postgres-identity
      - DB_PORT=5432
      - DB_NAME=dscp-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
      - AUTH_TYPE=${AUTH_TYPE:-NONE}
      - 'API_SWAGGER_BG_COLOR=#e4f2f3'
      - 'API_SWAGGER_TITLE=HyProof Identity API - Heidi'
      - 'API_SWAGGER_HEADING=HyProof Identity API - Heidi'
    networks: ['hydrogen-producer']

  hydrogen-producer-node:
    image: digicatapult/dscp-node:latest
    container_name: hydrogen-producer-node
    command: --base-path /data
      --alice
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000001
    # ports:
    #   - 30333:30333
    #   - 9944:9944
    #   - 9933:9933
    restart: on-failure
    networks: ['hydrogen-producer', 'chain']

  hydrogen-producer-hyproof-api:
    container_name: hydrogen-producer-hyproof-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 20 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npx @digicatapult/dscp-process-management@latest create -h hydrogen-producer-node -p 9944 -u //Alice -f ./processFlows.json &&
      npm start"
    environment:
      - PORT=8000
      - LOG_LEVEL=debug
      - NODE_HOST=hydrogen-producer-node
      - NODE_PORT=9944
      - DB_HOST=hydrogen-producer-postgres-hyproof-api
      - DB_PORT=5432
      - DB_NAME=dscp-hyproof-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=hydrogen-producer-identity
      - IDENTITY_SERVICE_PORT=9000
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Alice
      - 'API_SWAGGER_BG_COLOR=#e4f2f3'
      - 'API_SWAGGER_TITLE=HyProof API - Heidi'
      - 'API_SWAGGER_HEADING=HyProof API - Heidi'
    ports:
      - 8000:8000
    depends_on:
      hydrogen-producer-node:
        condition: service_healthy
      hydrogen-producer-identity:
        condition: service_started
      hydrogen-producer-postgres-hyproof-api:
        condition: service_started
      ipfs:
        condition: service_started
    restart: on-failure
    networks: ['hydrogen-producer', 'ipfs']

  ##################################################################################
  ## Emma the Energy Owner #########################################################
  ##################################################################################

  energy-owner-postgres-hyproof-api:
    image: postgres:16.1-alpine
    container_name: energy-owner-postgres-hyproof-api
    depends_on:
      energy-owner-node:
        condition: service_healthy
    volumes:
      - energy-owner-hyproof-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-hyproof-api
    networks: ['energy-owner']

  energy-owner-postgres-identity:
    image: postgres:16.1-alpine
    container_name: energy-owner-postgres-identity
    depends_on:
      energy-owner-node:
        condition: service_healthy
    volumes:
      - energy-owner-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-identity
    networks: ['energy-owner']

  energy-owner-identity:
    image: digicatapult/dscp-identity-service:latest
    container_name: energy-owner-identity
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest &&
      node app/index.js"
    ports:
      - 9010:9010
    depends_on:
      energy-owner-node:
        condition: service_healthy
      energy-owner-postgres-identity:
        condition: service_started
    environment:
      - PORT=9010
      - API_HOST=energy-owner-node
      - API_PORT=9944
      - DB_HOST=energy-owner-postgres-identity
      - DB_PORT=5432
      - DB_NAME=dscp-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
      - AUTH_TYPE=${AUTH_TYPE:-NONE}
      - 'API_SWAGGER_BG_COLOR=#e7f6e6'
      - 'API_SWAGGER_TITLE=HyProof Identity API - Emma'
      - 'API_SWAGGER_HEADING=HyProof Identity API - Emma'
    networks: ['energy-owner']

  energy-owner-node:
    image: digicatapult/dscp-node:latest
    container_name: energy-owner-node
    command: --base-path /data/
      --bob
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000002
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    # ports:
    #   - 31333:30333
    #   - 10044:9944
    #   - 10033:9933
    restart: on-failure
    networks: ['energy-owner', 'chain']

  energy-owner-hyproof-api:
    container_name: energy-owner-hyproof-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npm start"
    environment:
      - PORT=8010
      - LOG_LEVEL=debug
      - NODE_HOST=energy-owner-node
      - NODE_PORT=9944
      - DB_HOST=energy-owner-postgres-hyproof-api
      - DB_PORT=5432
      - DB_NAME=dscp-hyproof-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=energy-owner-identity
      - IDENTITY_SERVICE_PORT=9010
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Bob
      - 'API_SWAGGER_BG_COLOR=#e7f6e6'
      - 'API_SWAGGER_TITLE=HyProof API - Emma'
      - 'API_SWAGGER_HEADING=HyProof API - Emma'
    ports:
      - 8010:8010
    depends_on:
      energy-owner-node:
        condition: service_healthy
      energy-owner-identity:
        condition: service_started
      energy-owner-postgres-hyproof-api:
        condition: service_started
      ipfs:
        condition: service_started
    restart: on-failure
    networks: ['energy-owner', 'ipfs']

  ##################################################################################
  ## Reginald the Regulator ########################################################
  ##################################################################################

  regulator-postgres-hyproof-api:
    image: postgres:16.1-alpine
    container_name: regulator-postgres-hyproof-api
    depends_on:
      regulator-node:
        condition: service_healthy
    volumes:
      - regulator-hyproof-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-hyproof-api
    networks: ['regulator']

  regulator-postgres-identity:
    image: postgres:16.1-alpine
    container_name: regulator-postgres-identity
    depends_on:
      regulator-node:
        condition: service_healthy
    volumes:
      - regulator-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=dscp-identity
    networks: ['regulator']

  regulator-identity:
    image: digicatapult/dscp-identity-service:latest
    container_name: regulator-identity
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest &&
      node app/index.js"
    ports:
      - 9020:9020
    depends_on:
      regulator-node:
        condition: service_healthy
      regulator-postgres-identity:
        condition: service_started
    environment:
      - PORT=9020
      - API_HOST=regulator-node
      - API_PORT=9944
      - DB_HOST=regulator-postgres-identity
      - DB_PORT=5432
      - DB_NAME=dscp-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y
      - AUTH_TYPE=${AUTH_TYPE:-NONE}
      - 'API_SWAGGER_BG_COLOR=#f8dddd'
      - 'API_SWAGGER_TITLE=HyProof Identity API - Reginald'
      - 'API_SWAGGER_HEADING=HyProof Identity API - Reginald'
    networks: ['regulator']

  regulator-node:
    image: digicatapult/dscp-node:latest
    container_name: regulator-node
    command: --base-path /data/
      --charlie
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000003
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    restart: on-failure
    networks: ['regulator', 'chain']

  regulator-hyproof-api:
    container_name: regulator-hyproof-api
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "
      sleep 10 &&
      npx knex migrate:latest --knexfile build/lib/db/knexfile &&
      npm start"
    environment:
      - PORT=8020
      - LOG_LEVEL=debug
      - NODE_HOST=regulator-node
      - NODE_PORT=9944
      - DB_HOST=regulator-postgres-hyproof-api
      - DB_PORT=5432
      - DB_NAME=dscp-hyproof-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=regulator-identity
      - IDENTITY_SERVICE_PORT=9020
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - USER_URI=//Charlie
      - 'API_SWAGGER_BG_COLOR=#f8dddd'
      - 'API_SWAGGER_TITLE=HyProof API - Reginald'
      - 'API_SWAGGER_HEADING=HyProof API - Reginald'
    ports:
      - 8020:8020
    depends_on:
      regulator-node:
        condition: service_healthy
      regulator-identity:
        condition: service_started
      regulator-postgres-hyproof-api:
        condition: service_started
      ipfs:
        condition: service_started
    restart: on-failure
    networks: ['regulator', 'ipfs']

  ##################################################################################
  ## IPFS ##########################################################################
  ##################################################################################

  ipfs:
    image: ipfs/go-ipfs:v0.26.0
    container_name: ipfs
    depends_on:
      hydrogen-producer-node:
        condition: service_healthy
      energy-owner-node:
        condition: service_healthy
      regulator-node:
        condition: service_healthy
    environment:
      - |
        IPFS_SWARM_KEY=/key/swarm/psk/1.0.0/
        /base16/
        0000000000000000000000000000000000000000000000000000000000000000
    ports:
      - 8080:8080
    networks: ['ipfs']
    volumes:
      - ipfs:/data/ipfs

volumes:
  hydrogen-producer-hyproof-api-storage:
  hydrogen-producer-identity-storage:
  energy-owner-hyproof-api-storage:
  energy-owner-identity-storage:
  regulator-hyproof-api-storage:
  regulator-identity-storage:
  ipfs:
